-- "dao.cabal" build configuration for this project.
--
-- Copyright (C) 2014  Ramin Honary.
--
-- Dao is free software: you can redistribute it and/or modify it under
-- the terms of the GNU General Public License as published by the Free
-- Software Foundation, either version 3 of the License, or (at your
-- option) any later version.
--
-- Dao is distributed in the hope that it will be useful, but WITHOUT
-- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-- FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
-- for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program (see the file called "LICENSE"). If not, see
-- <http://www.gnu.org/licenses/agpl.html>.

Name:           Dao
Version:        1.0.0.0
Cabal-Version:  >= 1.18
License:        GPL-3
Copyright:      (C) 2014 Ramin Honary, all rights reserved.
Author:         Ramin Honary
Maintainer:     ramin.honary@gmail.com
Build-Type:     Simple
Synopsis:       A pure-Haskell dynamically-typed DSL for production rule-based logic programming and AI.
Description:    Dao is a Domain Specific Language (DSL) intended providing tools
                for logic programming and constructing knowledge bases, with a
                focus on artificial intelligence. Reminiscient of the PROLOG
                programming language, but made better with Haskell's static
                type checking and clean semantics, Dao is well suited for
                things like type checking, computing build dependencies,
                whole-program analysis, rapid prototyping of parsers, and
                Read-Eval-Print Loop-based (REPL-based) source code
                development, as well as natural language comprehension.
                
                Dao originally defined a JavaScript-like programming
                language for defining production rule databases suited to
                natural language understanding, but now it is just a DSL with
                tools for defining grammars and parsers, where all production
                rules are defined in a Haskell program using the Dao APIs.
Library
  HS-source-dirs: src
  GHC-options: -threaded -Wall
    -fno-warn-name-shadowing
    -fno-warn-unused-do-bind
  Exposed-Modules:
    Dao.Array         Dao.Check          Dao.Computer     Dao.Concurrent
    Dao.Count         Dao.Grammar.Debug  Dao.Grammar      Dao
    Dao.Interval      Dao.Int            Dao.IOArray      Dao.Lens
    Dao.Logic         Dao.Object         Dao.PPrint       Dao.Predicate
    Dao.Range         Dao.Rule           Dao.SparseArray  Dao.TestNull
    Dao.Text.Builder  Dao.Text           Dao.Text.Parser  Dao.Tree
  Build-Depends:
    -- minimal dependencies for core modules
    array               >= 0.3.0.2, base         >= 4.3.1.0, binary      >= 0.5.0.2,
    bytestring          >= 0.9.1.2, containers   >= 0.4.0.0, Crypto      >= 4.2.5.1,
    data-binary-ieee754 >= 0.4.4  , deepseq      >= 1.3.0.0, directory   >= 1.1.0.0,
    filepath            >= 1.2.0.0, mtl          >= 2.2.1  , process     >= 1.0.1.2,
    random              >= 1.0.0.1, text         >= 1.1.0.1, time        >= 1.4.2  ,
    template-haskell    >= 2.9.0.0, transformers >= 0.2.2.0, utf8-string >= 0.3.2
    -- dependencies for additional modules
    -- none
  Default-Extensions:
    DeriveDataTypeable    ExistentialQuantification FlexibleContexts
    FlexibleInstances     FunctionalDependencies    GeneralizedNewtypeDeriving
    MultiParamTypeClasses OverlappingInstances      RankNTypes
    ScopedTypeVariables   StandaloneDeriving        TemplateHaskell
    TypeFamilies          ImplicitParams
  Default-Language: Haskell2010
  GHC-Options: -threaded

Test-Suite dao-tests
  Type:           exitcode-stdio-1.0
  Main-is:        dao-tests.hs
  HS-source-dirs: src tests
  Build-Depends:
    array >= 0.3.0.2, containers >= 0.4.0.0,
    base  >= 4.3.1.0, deepseq    >= 1.3.0.0,
    text  >= 1.1.0.1,
    time  >= 1.4.2
  GHC-options: -threaded -Wall
    -fno-warn-name-shadowing
    -fno-warn-unused-do-bind
    -with-rtsopts=-M4G
  Default-Extensions:
    DeriveDataTypeable    ExistentialQuantification FlexibleContexts
    FlexibleInstances     FunctionalDependencies    GeneralizedNewtypeDeriving
    MultiParamTypeClasses OverlappingInstances      RankNTypes
    ScopedTypeVariables   StandaloneDeriving        TemplateHaskell
    TypeFamilies
  Default-Language: Haskell2010

