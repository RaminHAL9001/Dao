global LE = ListEditor{};
global saved = Dict{};

func delSpaces(list) { for item in list { if(item==" ") { delete(item); } } return list; }

rule "ls" { println(global LE); }
rule "ls $list" {
	try {
		list = delSpaces(list);
		for item in list {
			try {
				println(global saved[item]);
			}
			catch err {
				println("no such list ", item);
			}
		}
	}
	catch err { println(err); }
}

rule "<+ $left" {
	try {
		global LE.insertLeft(delSpaces(left));
		println("inserted items");
	}
	catch err { println(err); }
}

rule "+> $right" {
	try {
		global LE.insertRight(delSpaces(right));
		println("inserted items");
	}
	catch err { println(err); }
}

rule "$list? <+" {
	try {
		global LE.insertLeft(global saved[list]);
		println("inserted items");
	}
	catch err { println(err); }
}

rule "$list? +>" {
	try {
		global LE.insertRight(global saved[list]);
		println("inserted items");
	}
	catch err { println(err); }
}

rule "cd $i?" {
	try { i = int(join("", i)); global LE.cursorTo(i); println("cursor to index ", i); }
	catch err { println(err); }
}

rule "<." {
	try { global LE.shift(-1); println("shift cursor left 1", i); }
	catch err { println(err); }
}

rule "<. $i?" {
	try { i = int(join("", i)); global LE.shift(-i); println("shift cursor left ", -i); }
	catch err { println(err); }
}

rule ".>" {
	try { global LE.shift(+1); println("shift cursor right 1"); }
	catch err { println(err); }
}

rule ".> $i?" {
	try { i = int(join("", i)); global LE.shift(+i); println("shift cursor left ", i); }
	catch err { println(err); }
}

rule "cut $lo? $hi?" {
	try {
		lo = int(join("", lo)); hi = int(join("", hi));
		items = global LE.cut(lo, hi);
		println("deleted items: ", items);
	}
	catch err { println(err); }
}

rule "cut $lo? $hi? -> $dest?" {
	try {
		lo = int(join("", lo)); hi = int(join("", hi));
		items = global LE.cut(lo, hi);
		global saved[$dest] = items;
		println("cut range of items ", lo, "..", hi, " and moved them into ", dest);
	}
	catch err { println(err); }
}

rule "cp $lo? $hi? -> $dest?" {
	try {
		lo = int(lo); hi = int(hi);
		items = global LE.copy(lo, hi);
		global saved[$dest] = items;
		println("copied range of items ", lo, "..", hi, " into ", dest);
	}
	catch err { println(err); }
}

rule "rm $x?" { delete(global saved[$x]); println("deleted ", $x); }

