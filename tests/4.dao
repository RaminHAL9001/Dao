// Tests how conditional statements are evaluated in the top level as well as when evaluated in a
// function call.

//: test println
println("test println");

//: if(true) { ... } --> OK
if(true) {
	println("if(true) { ... } --> OK");
}

//: if(! false) { ... } -> OK
if(! false) {
	println("if(! false) { ... } -> OK");
}

//: if(0 == 0) { ... } --> OK
if(0 == 0) {
	println("if(0 == 0) { ... } --> OK");
}

//: if(true) { ... } --> OK
if(true) {
	println("if(true) { ... } --> OK");
}
else {
	throw "if(true) { ... } else { ... } --> FAIL";
}

//: if(false) { ... } else { ... } --> OK
if(false) {
	throw "if(false) { ... } else { ... } --> FAIL";
}
else {
	println("if(false) { ... } else { ... } --> OK");
}

//: if(0 == 0) { ... } else { ... } --> OK
if(0 == 0) {
	println("if(0 == 0) { ... } else { ... } --> OK");
}
else {
	throw "if(0 != 0) { ... } else { ... } --> FAIL";
}

//: if(0 != 0) { ... } else { ... } --> OK
if(0 != 0) {
	throw "if(0 != 0) { ... } else { ... } --> FAIL";
}
else {
	println("if(0 != 0) { ... } else { ... } --> OK");
}

//: if(! (0 == 0)) { ... } else { ... } --> OK
if(! (0 == 0)) {
	throw "if(! (0 == 0)) { ... } else { ... } --> FAIL";
}
else {
	println("if(! (0 == 0)) { ... } else { ... } --> OK");
}

//: if(! (0 != 0)) { ... } else { ... } --> OK
if(! (0 != 0)) {
	println("if(! (0 != 0)) { ... } else { ... } --> OK");
}
else {
	throw "if(! (0 != 0)) { ... } else { ... } --> FAIL";
}

//: top-level var assign
a = "top-level var assign";
println(a);

//: re-assign
a = "re-assign";
println(a);

//: if(a == a) { ... } else { ... } --> OK
if(a == a) {
	println("if(a == a) { ... } else { ... } --> OK");
}
else {
	throw "if(a != a) { ... } else { ... } --> FAIL";
}

//: if(a != a) { ... } else { ... } --> OK
if(a != a) {
	throw "if(a != a) { ... } else { ... } --> FAIL";
}
else {
	println("if(a != a) { ... } else { ... } --> OK");
}

//: if(! (a == a)) { ... } else { ... } --> OK
if(! (a == a)) {
	throw "if(! (a == a)) { ... } else { ... } --> FAIL";
}
else {
	println("if(! (a == a)) { ... } else { ... } --> OK");
}

//: if(! (a != a)) { ... } else { ... } --> OK
if(! (a != a)) {
	println("if(! (a != a)) { ... } else { ... } --> OK");
}
else {
	throw "if(! (a != a)) { ... } else { ... } --> FAIL";
}

a = 0;
if(a == 0) {
	println("if(a == 0) { ... } else { ... } --> OK");
}
else {
	throw "if(a == 0) { ... } else { ... } --> FAIL";
}
//: if(a == 0) { ... } else { ... } --> OK

a = "Hello";
if(a == "Hello") {
	println("if(a == \"Hello\") { ... } else { ... } --> OK");
}
else {
	throw "if(a == \"Hello\") { ... } else { ... } --> FAIL";
}
//: if(a == \"Hello\") { ... } else { ... } --> OK

a += ", ";
println(a, "world!");
//: Hello, world!

a = "assign a";
//: before update: assign a
println("before update: ", a);
if(a == "assign a") {
	a = "update a";
//: update in condition: update a
	println("update in condition: ", a);
}
else {
	throw "if(a == \"assign a\") { ... } else { ... } --> FAIL";
}
//: after update: update a
println("after update: ", a);

func testFuncCall() {
	println("function call --> OK");
}

//: function call --> OK
testFuncCall();

func test01() {
	if(true) {
		println("if(true) { ... } --> OK");
	}
}

func test02() {
	if(! false) {
		println("if(! false) { ... } -> OK");
	}
}

func test03() {
	if(0 == 0) {
		println("if(0 == 0) { ... } --> OK");
	}
}

func test04() {
	if(true) {
		println("if(true) { ... } --> OK");
	}
	else {
		throw "if(true) { ... } else { ... } --> FAIL";
	}
}

func test05() {
	if(false) {
		throw "if(false) { ... } else { ... } --> FAIL";
	}
	else {
		println("if(false) { ... } else { ... } --> OK");
	}
}

func test06() {
	if(0 == 0) {
		println("if(0 == 0) { ... } else { ... } --> OK");
	}
	else {
		throw "if(0 != 0) { ... } else { ... } --> FAIL";
	}
}

func test07() {
	if(0 != 0) {
		throw "if(0 != 0) { ... } else { ... } --> FAIL";
	}
	else {
		println("if(0 != 0) { ... } else { ... } --> OK");
	}
}

func test08() {
	if(! (0 == 0)) {
		throw "if(! (0 == 0)) { ... } else { ... } --> FAIL";
	}
	else {
		println("if(! (0 == 0)) { ... } else { ... } --> OK");
	}
}

func test09() {
	if(! (0 != 0)) {
		println("if(! (0 != 0)) { ... } else { ... } --> OK");
	}
	else {
		throw "if(! (0 != 0)) { ... } else { ... } --> FAIL";
	}
}

func test10() {
	a = "top-level var assign";
	println(a);
}

func test11() {
	a = "re-assign";
	println(a);
}

func test12() {
	if(a == a) {
		println("if(a == a) { ... } else { ... } --> OK");
	}
	else {
		throw "if(a != a) { ... } else { ... } --> FAIL";
	}
}

func test13() {
	if(a != a) {
		throw "if(a != a) { ... } else { ... } --> FAIL";
	}
	else {
		println("if(a != a) { ... } else { ... } --> OK");
	}
}

func test14() {
	if(! (a == a)) {
		throw "if(! (a == a)) { ... } else { ... } --> FAIL";
	}
	else {
		println("if(! (a == a)) { ... } else { ... } --> OK");
	}
}

func test15() {
	if(! (a != a)) {
		println("if(! (a != a)) { ... } else { ... } --> OK");
	}
	else {
		throw "if(! (a != a)) { ... } else { ... } --> FAIL";
	}
}

func test16() {
	a = "Hello";
	if(a == "Hello") {
		println("if(a == \"Hello\") { ... } else { ... } --> OK");
	}
	else {
		throw "if(a == \"Hello\") { ... } else { ... } --> FAIL";
	}
	a += ", ";
	println(a, "world!");
}

func test17() {
	a = "assign a";
	//: before update: assign a
	println("before update: ", a);
	if(a == "assign a") {
		a = "update a";
	//: update in condition: update a
		println("update in condition: ", a);
	}
	else {
		throw "if(a == \"assign a\") { ... } else { ... } --> FAIL";
	}
	//: after update: update a
	println("after update: ", a);

}

func test18() {
	func testFuncCall() {
		println("local function call --> OK");
	}
	testFuncCall();
}

//: if(true) { ... } --> OK
test01();

//: if(! false) { ... } -> OK
test02();

//: if(0 == 0) { ... } --> OK
test03();

//: if(true) { ... } --> OK
test04();

//: if(false) { ... } else { ... } --> OK
test05();

//: if(0 == 0) { ... } else { ... } --> OK
test06();

//: if(0 != 0) { ... } else { ... } --> OK
test07();

//: if(! (0 == 0)) { ... } else { ... } --> OK
test08();

//: if(! (0 != 0)) { ... } else { ... } --> OK
test09();

//: top-level var assign
test10();

//: re-assign
test11();

//: if(a == a) { ... } else { ... } --> OK
test12();

//: if(a != a) { ... } else { ... } --> OK
test13();

//: if(! (a == a)) { ... } else { ... } --> OK
test14();

//: if(! (a != a)) { ... } else { ... } --> OK
test15();

//: if(a == \"Hello\") { ... } else { ... } --> OK
//: Hello, world!
test16();

//: before update: assign a
//: update in condition: update a
//: after update: update a
test17();

//: local function call --> OK
test18();

